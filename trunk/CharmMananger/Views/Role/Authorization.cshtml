@using Charm.Entity.Role
@{
    ViewBag.Title = "角色授权";
    Layout = "~/Views/Shared/_layout.cshtml";
}

@{
    this.ViewBag.Title = "管理角色信息-角色授权";
}

<style>
    .checkbox-inline + .checkbox-inline {
        margin-left: 0px;
    }
</style>


@using (this.Html.BeginForm("Authorization", "Role", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.Hidden("roleId", (Guid)ViewBag.RoleId);

    //功能
    var actions = (List<CharmCommonActionInfo>)ViewBag.Actions;
    //角色与功能的关系
    var roleActions = (List<CharmCommonRoleAction>)ViewBag.RoleActions;

    if (roleActions == null)
    {
        roleActions = new List<CharmCommonRoleAction>();
    }

    //模块名称
    var menus = actions.OrderBy(p => p.Sort).Select(p => p.MenuName).Distinct();

    foreach (var menu in menus)
    {
        <div class="panel panel-primary">

            <div class="panel-heading">
                <h3 class="panel-title">@menu</h3>
            </div>

            <div class="panel-body">
                @{
                    //分类名称（获取指定 模块名称 下的功能）
                    var groups = actions.Where(p => p.MenuName == menu).OrderBy(p => p.Sort).Select(p => p.ActionCategoryName).Distinct();
                }
                @foreach (var group in groups)
                {
                    <div class="form-group">

                        <div class="pull-left" style="width: 130px;">
                            <label class="checkbox-inline">@group</label>
                            <div class="col-xs-12">
                                <input type="button" value="全选" data-target=".j-group[data-name='@menu@group']" class="btn btn-link btn-xs j-checkall" />
                                <input type="button" value="反选" data-target=".j-group[data-name='@menu@group']" class="btn btn-link btn-xs j-checkreverse" />
                            </div>
                        </div>

                        <div class="pull-left j-group" data-name="@menu@group">
                            @{
                                //功能名称（获取指定 模块名称和分类名称 下的功能）
                                var cactions = actions.Where(p => p.MenuName == menu && p.ActionCategoryName == group).OrderBy(p => p.Sort);
                            }
                            @foreach (var action in cactions)
                            {
                                <label class="checkbox-inline">
                                    <input type="checkbox" name="actionIds" value="@action.ActionId" id="@action.ActionId" @(roleActions.Any(p => p.ActionId == action.ActionId) ? "checked" : string.Empty)>
                                    @action.ActionName
                                </label>
                            }
                        </div>

                    </div>
                }
            </div>

        </div>
    }

    <div class="row">
        <div class="col-md-6 col-md-offset-1">
            <button class="btn blue" type="submit" id="btnSave"><i class="fa fa-save"></i>&nbsp;保存</button>
        </div>
    </div>
}
